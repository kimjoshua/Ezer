package com.ezer_g.www.web;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.ezer_g.www.dto.LrtmemDto;
import com.ezer_g.www.dto.LtadminDt;
import com.ezer_g.www.loghash.Hash;
import com.ezer_g.www.service.Lrunservice;

@Controller
public class ezerWebcon {
	private Lrunservice service;

	public void setService(Lrunservice service) {
		this.service = service;
	}

	@RequestMapping("/")
	public String index() {
		return "index";

	}

	@RequestMapping("/index")
	public ModelAndView indexx() {
		System.out.println("ddd");
		return new ModelAndView("index");
	}

	/*
	 * @RequestMapping("memberIn") public ModelAndView join() {
	 * System.out.println("ddd"); return new ModelAndView("/join/memberIn"); }
	 */
	@RequestMapping("memberIn")
	public ModelAndView join1() {
		return new ModelAndView("/join/memberIn");
	}

	@RequestMapping("memberjoin")
	public void member(HttpServletRequest req, HttpServletResponse rs,
			LrtmemDto vo) throws IOException {

		String name = req.getParameter("name");
		String category = req.getParameter("category");
		String subject = req.getParameter("subject");
		String adddata1 = req.getParameter("adddata1");
		String tel = req.getParameter("tel");

		vo.setName(name);
		vo.setCategory(category);
		vo.setSubject(subject);
		vo.setAdddata1(adddata1);
		vo.setTel(tel);
		service.memberjoin(vo);

	}

	@RequestMapping("Ladmintra")
	public String admin() {

		return "/Ladmintrade/adminPage";
	}

	@RequestMapping("login")
	public ModelAndView adminLogin(HttpServletRequest req,
			HttpServletResponse rs, LtadminDt vo, Model model)
			throws UnsupportedEncodingException {
		Hash hs = new Hash();
		String id = req.getParameter("id");
		String pwd = req.getParameter("pwd");
		System.out.println(id + pwd);
		byte pbCipher[] = new byte[32];
		hs.SHA256_Encrpyt(req.getParameter("pwd").getBytes("UTF-8"),
				pwd.length(), pbCipher);
		String hashpwdresult = "";
		for (int i = 0; i < 32; i++) {
			hashpwdresult += Integer.toHexString(0xff & pbCipher[i]);
		}
		vo.setId(id);
		vo.setPwd(hashpwdresult);
		System.out.println(vo.getPwd());

		HashMap<String, String> result = service
				.loging(vo);
		if (result != null) {
			req.getSession().setAttribute("userInfo", result);
			return new ModelAndView("/view/ap", "userInfo", result);
		} else {
			return new ModelAndView("/Ladmintrade/adminPage", "userInfo", null);
		}

	}
	

	@RequestMapping("compIntr")
	public String compIntr(){
		return "/coloris/compIntr";
	}
	
	@RequestMapping("eduDir")
	public String eduDir() {
		return "/coloris/eduDirector";
	}
	@RequestMapping("serviceA")
	public String serviceA() {
		return "/coloris/serviceA";
	}
	@RequestMapping("separator")
	public String separator() {
		return "/coloris/separator";
	}
	
	@RequestMapping("eduAcc")
	public String eduAcc() {
		return "/coloris/eduAcc";
	}
	@RequestMapping("htc")
	public String htc() {
		return "/coloris/htc";
	}
	
	
}
