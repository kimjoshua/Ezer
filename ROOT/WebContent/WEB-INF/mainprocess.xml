<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<context:component-scan base-package="com.ezer_g.*">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

<!-- DB transaction but java단에서 null 값을 체크 하고있어 필요 없을거 같기도 하고...  -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="simpleDriverDataSource"></property>
</bean>
<aop:config proxy-target-class="true">
	<aop:pointcut id="sop" expression="execution(public * com.ezer_g.www.service.*.*(..))" />
	<aop:advisor id="transactionAdvisor" advice-ref="txAdvice" pointcut-ref="sop" />
</aop:config>
<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
		<tx:method name="addQa*" rollback-for="Exception"/>
		<tx:method name="*" rollback-for="Exception"/>
		<tx:method name="add*" rollback-for="Exception"/>
	</tx:attributes>
</tx:advice>

	<bean id="internalResourceViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/webs" p:suffix=".jsp"></bean>

	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/mybatis/mysql.properties"></property>
	</bean>


	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean" index="0" />
	</bean>

	<!-- query xml create read -->
	<!-- <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="simpleDriverDataSource"></property> <property 
		name="configLocation" value="/WEB-INF/mybatis/SqlMapConf.xml"></property> 
		</bean> -->




	<!-- query xml auto read -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="simpleDriverDataSource"></property>
		<property name="databaseIdProvider" ref="databaseIdProvider"></property>
		<property name="configLocation" value="/WEB-INF/mybatis/config/sql-map-config.xml"></property>
		<property name="mapperLocations" value="classpath:com/ezer_g/www/mapper/*.xml"></property>
	</bean>

	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties" ref="vendorProperties"></property>
	</bean>

	<bean id="vendorProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="SQL Server">sqlserver</prop>
				<prop key="DB2">db2</prop>
				<prop key="Oracle">oracle</prop>
				<prop key="MySql">mysql</prop>
			</props>
		</property>

	</bean>

	<bean id="simpleDriverDataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

</beans>
